{"version":3,"sources":["webpack:///./src/components/index.tsx"],"names":[],"mappings":"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","file":"main.8910a78bded64c6ddf79.hot-update.js","sourcesContent":["import * as React from 'react'\nimport * as ReactDOM from 'react-dom'\nimport { useState, /*useEffect,*/ useContext, createContext} from 'react'\nimport axios from 'axios'\n/* 10項目の項目（スキーマ）を用意し、画面で入力したデータを登録、編集、削除するアプリを作成する。\n項目名は和名と英名を用意し、和名を画面描画に使用し、英名をスキーマ名に使用すること\n例）和名：名前　英名：name\n一覧画面（index.html）を開くと登録したデータをテーブルで一覧表示する。\nデータが登録されていない場合は「登録されていない」旨を表示する。\nindex.htmlに「新規登録」ボタンを設置し、登録画面に遷移する。\n登録画面で10項目を入力するフォームを用意する。\n登録画面で「登録」ボタンを押下し、データを登録する。成功時には一覧画面に遷移する。一覧には登録した全データが表示されていること\n登録に失敗した場合は、エラー内容をalertで表示すること\n一覧から任意のデータを選択し、そのデータの編集画面に遷移する。\n編集画面で選択したデータの編集が行えること\n編集画面に「更新」ボタンを押下し、データを更新する。成功時に一覧画面に遷移する。一覧には編集後のデータが表示されていること\n失敗時にはエラー内容をalertで表示すること\n一覧から任意のデータを選択し、「削除」ボタンを押下することでそのデータを削除する。\n削除成功時には削除後の一覧が表示されること */\n\nconst FormComponent = () => {\n    const [name, email, memo, gender,address, job, height] = useContext(FormContext)\n    const [selectBoxChange,changeName, changeEmail, changeJob, changeAddress, changeMemo, changeHeight] = useContext(ChangeTextContext)\n    const [putdata, checkedMen, checkedWomen] = useContext(CheckedContext)\n\n    return (\n        <form name=\"forms\">    \n            <input type=\"text\" name={name} value={name} onChange={changeName} placeholder=\"名前\"　/><br />\n            <input type=\"text\" name={email} value={email} onChange={changeEmail} placeholder=\"メールアドレス\" /><br />\n            <label htmlFor=\"calendar\">生年月日:</label><br />\n            <input type=\"date\" name=\"calendar\" max=\"9999-12-31\"></input><br />\n            <input type=\"text\" name={job} value={job} onChange={changeJob} placeholder=\"職業\" /><br />\n            <input type=\"text\" name={address} value={address} onChange={changeAddress} placeholder=\"住所\" /><br />\n            <input type=\"radio\" name={gender} onChange={checkedMen} /><label htmlFor=\"gender\">男</label>\n            <input type=\"radio\" name={gender} onChange={checkedWomen}/><label htmlFor=\"gender\">女</label><br />\n            <label htmlFor={height}>身長</label><input type=\"number\" name={height} value={height} onChange={changeHeight}/><br />\n            <p>チェック<br />\n                <input type=\"checkbox\" name=\"check\"/>チェック１\n                <input type=\"checkbox\" name=\"check\"/>チェック2\n                <input type=\"checkbox\" name=\"check\"/>チェック3\n            </p>\n            <select name=\"example\" id=\"output\" onChange={selectBoxChange}>\n                <option>サンプル１</option>\n                <option>サンプル２</option>\n                <option>サンプル３</option>\n            </select><br />\n            <textarea name={memo} value={memo} onChange={changeMemo} placeholder=\"メモ\"></textarea><br />\n            {/*onclickでデータ登録 成功時に一覧画面遷移 失敗したらエラー内容をアラート*/}\n            <button type=\"submit\"  onClick={putdata}>登録</button>\n        </form>\n    )\n}\n\ntype form = string[]\nconst FormContext = createContext<form>([])\nconst ChangeTextContext = createContext([(e:any) => {e.target.value}])\nconst CheckedContext = createContext([() => {}])\n\nconst App = () => {\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [memo, setMemo] = useState('')\n    const [gender, setGender] = useState('')\n    const [job, setJob] = useState('')\n    const [address, setAddress] = useState('')\n    const [height, setHeight] = useState('')\n    const [selectBox, setSelectbox] = useState('')\n    const [checkBox, /*setCheckBox*/] = useState('')\n\n    const changeName = (e:any) => {\n        setName(e.target.value)\n    }\n    const changeEmail = (e:any) => {\n        setEmail(e.target.value)\n    }\n    const changeJob = (e:any) => {\n        setJob(e.target.value)\n    }\n    const changeAddress = (e:any) => {\n        setAddress(e.target.value)\n    }\n    const changeMemo = (e:any)  => {\n        setMemo(e.target.value)\n    }\n    const changeHeight = (e:any) => {\n        setHeight(e.target.value)\n    }\n    const checkedMen = () => {\n        setGender('男')\n    }\n    const checkedWomen = () => {\n        setGender('女')\n    }\n    const selectBoxChange = (select:any) => {\n            const str = select.value\n            setSelectbox(str) \n    }\n   /* const checkBoxChange = () => {\n        const len = document.forms.check.length\n        for(i=0; i < len ; i++) { \n        if ( document.forms.checkbox[i].checked ) {\n            //チェックが入っている時の処理\n            //document.form1.checkbox[i].valueで値が取得できる\n        }\n    } \n        \n    }*/\n\n    const req: VtecxApp.Entry[] = [\n        {    \n            user:{\n                name: name,\n                email: email,\n                memo: memo,\n                gender: gender,\n                job: job,\n                address: address,\n                height:height,\n                select: selectBox,\n                check: checkBox\n            },\n            link: [\n                {\n                    \"___href\": \"/foo/2\",\n                    \"___rel\": \"self\"\n                }\n            ]\n        }\n    ]\n  \n    const putdata = async () => {\n        try {\n          axios.defaults.headers['X-Requested-With'] = 'XMLHttpRequest'\n          const res = await axios.put('/d/foo',req)\n          console.log(res)\n          console.log(req)\n          console.log({name})\n        } catch (e) {\n          alert('error')\n          console.log(e)\n        }\n      }\n\n    \n  return (\n      <div>\n          <FormContext.Provider value={[name, email, memo, gender,address, job, height,selectBox, checkBox]}>\n              <ChangeTextContext.Provider value={[ selectBoxChange,changeName, changeEmail, changeJob, changeAddress, changeMemo, changeHeight]}>\n                  <CheckedContext.Provider value={[putdata, checkedMen, checkedWomen]}>\n                      <FormComponent />\n                  </CheckedContext.Provider>\n              </ChangeTextContext.Provider>\n          </FormContext.Provider>\n      </div>\n  )\n\n}\n\nReactDOM.render(<App />, document.getElementById('container'))"],"sourceRoot":""}
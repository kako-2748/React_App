{"version":3,"sources":["webpack:///./src/components/index.tsx"],"names":[],"mappings":";;;;;;;;;;;;AAAA,sDAA8B;AAC9B,iEAAqC;AACrC,4DAA4D;AAC5D,yFAAuD;AACvD,2BAA2B;AAE3B;;;;;;;;;;;;;;;;EAgBE;AAEF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAkDE;AACF,IAAM,WAAW,GAAG,cAAM,QACxB;IACE,uCAAa;IACb,qEAAsB,CAClB,CACP,EALyB,CAKzB;AACD,IAAM,UAAU,GAAG,cAAM,QACvB;IACE,wCAAc;IACd,sHAAqB,CACjB,CACP,EALwB,CAKxB;AACD,IAAM,QAAQ,GAAG,cAAM,QACrB;IACE,0CAAgB;IAChB,kIAAuB,CACnB,CACP,EALsB,CAKtB;AAED,IAAM,GAAG,GAAG,WAAC,aAAa;IACxB,OAAM,CACJ,oBAAC,gCAAa;QACV;YACI,oBAAC,wBAAK,IAAC,KAAK,QAAC,IAAI,EAAG,GAAG,EAAC,SAAS,EAAK,WAAW,GAAK;YACtD,oBAAC,wBAAK,IAAC,IAAI,EAAG,SAAS,EAAC,SAAS,EAAK,UAAU,GAAK;YACrD,oBAAC,wBAAK,IAAC,IAAI,EAAG,WAAW,EAAC,SAAS,EAAK,QAAQ,GAAK,CACnD,CACM,CACjB;AACH,CAAC;AACC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EA4DA;AAEF,QAAQ,CAAC,MAAM,CAAC,oBAAC,GAAG,OAAG,EAAE,QAAQ,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC","file":"main.72ce419d4b133e7f91ab.hot-update.js","sourcesContent":["import * as React from 'react'\nimport * as ReactDOM from 'react-dom'\n//import { useState, useContext, createContext} from 'react'\nimport { BrowserRouter, Route } from 'react-router-dom'\n//import axios from 'axios'\n\n/*\n10項目の項目（スキーマ）を用意し、画面で入力したデータを登録、編集、削除するアプリを作成する。\n項目名は和名と英名を用意し、和名を画面描画に使用し、英名をスキーマ名に使用すること\n一覧画面（index.html）を開くと登録したデータをテーブルで一覧表示する。\nデータが登録されていない場合は「登録されていない」旨を表示する。\nindex.htmlに「新規登録」ボタンを設置し、登録画面に遷移する。\n登録画面で10項目を入力するフォームを用意する。\nテキストエリア、ラジオボタン、セレクトボックス、チェックボックスを必ず使用すること\n登録画面で「登録」ボタンを押下し、データを登録する。成功時には一覧画面に遷移する。一覧には登録した全データが表示されていること\n登録に失敗した場合は、エラー内容をalertで表示すること\n一覧から任意のデータを選択し、そのデータの編集画面に遷移する。\n編集画面で選択したデータの編集が行えること\n編集画面に「更新」ボタンを押下し、データを更新する。成功時に一覧画面に遷移する。一覧には編集後のデータが表示されていること\n失敗時にはエラー内容をalertで表示すること\n一覧から任意のデータを選択し、「削除」ボタンを押下することでそのデータを削除する。\n削除成功時には削除後の一覧が表示されること\n*/\n\n/*type form =  any\nconst FormContext = createContext<form>([])\nconst ChangeTextContext = createContext<form>([])\n\nconst FormComponent = () => {\n    const [state] = useContext(FormContext)\n    const [setState] = useContext(ChangeTextContext)\n    \n    return (\n        <form name=\"forms\">    \n            <input type=\"text\" name={state.name} value={state.name} onChange={(e:any) => setState({...state,name: e.target.value})} placeholder=\"名前\"　/><br />\n            <input type=\"text\" name={state.email} value={state.email} onChange={(e:any) => setState({...state, email:e.target.value})} placeholder=\"メールアドレス\" /><br />\n            <label htmlFor=\"calendar\">生年月日:</label><br />\n            <input type=\"date\" max=\"9999-12-31\" value={state.birthday} onChange={(e:any) => setState({...state, birthday:e.target.value})} /><br />\n            <input type=\"text\" value={state.job} onChange={(e:any) => setState({...state, job: e.target.value})} placeholder=\"職業\" /><br />\n            <input type=\"text\" name={state.address} value={state.address} onChange={(e:any) => setState({...state, address: e.target.value})} placeholder=\"住所\" /><br />\n            <input type=\"text\" name={state.height} value={state.height} onChange={(e:any) => setState({...state, height: e.target.value})} placeholder=\"身長\"/><br />\n            <CheckComponent />   \n            <textarea name={state.memo} value={state.memo} onChange={(e:any) => setState({...state, memo: e.target.value})} placeholder=\"メモ\"></textarea><br /> \n            <ButtonCompoent />\n        </form>\n    )\n}\n\nconst CheckComponent = () => {\n    const [state] = useContext(FormContext)\n    const [setState] = useContext(ChangeTextContext)\n  \n    return (\n    <form>\n         <input type=\"radio\" name={state.gender} onChange={() => setState({...state,gender: '男'})} /><label htmlFor=\"gender\">男</label>\n         <input type=\"radio\" name={state.gender} onChange={() => setState({...state, gender: '女'})} /><label htmlFor=\"gender\">女</label><br />\n          <input type=\"checkbox\" name={state.check} onChange={() => setState({...state, check: 'チェック１'})} />チェック１\n          <input type=\"checkbox\" name={state.check} onChange={() => setState({...state, check: 'チェック２'})} />チェック2\n          <input type=\"checkbox\" name={state.check} onChange={() => setState({...state, check:'チェック３'})} />チェック3<br />\n         <select value={state.selectBox} onChange={(e:any) => setState({...state, selectBox: e.target.value})}>\n          <option value=\"サンプル１\">サンプル１</option>\n          <option value=\"サンプル２\">サンプル２</option>\n          <option value=\"サンプル３\">サンプル３</option>\n        </select><br />\n    </form>\n    )\n}\n\nconst ButtonCompoent = () => {\n    const [putdata] = useContext(ChangeTextContext)\n    return(\n    <button type=\"submit\"  onClick={putdata}>登録</button>\n    )\n}\n*/\nconst ListDisplay = () => (\n  <div>\n    <h2>Home</h2>\n    <p>Welcome to ようこそ</p>\n  </div>\n)\nconst RegistProf = () => (\n  <div>\n    <h2>About</h2>\n    <p>フレンズに投票するページです</p>\n  </div>\n)\nconst ProfEdit = () => (\n  <div>\n    <h2>Friends</h2>\n    <p>ここにフレンズのリストを書きます</p>\n  </div>\n)\n\nconst App = (/*props:any*/) => {\n  return(\n    <BrowserRouter>\n        <div>\n            <Route exact path = '/' component = { ListDisplay } />\n            <Route path = '/regist' component = { RegistProf } />\n            <Route path = '/ProfEdit' component = { ProfEdit } />\n        </div>\n    </BrowserRouter>\n  )\n}\n  /*  const [state, setState] = useState(props)\n   \n    const req: VtecxApp.Entry[] = [\n        {    \n            user:{\n                name: state.name,\n                email: state.email,\n                memo: state.memo,\n                gender: state.gender,\n                job: state.job,\n                address: state.address,\n                height:state.height,\n                select: state.selectBox,\n                check: state.check\n            },\n            link: [\n                {\n                    \"___href\": \"/foo/2\",\n                    \"___rel\": \"self\"\n                }\n            ]\n        }\n    ]\n  \n    const putdata = async () => {\n        try {\n          axios.defaults.headers['X-Requested-With'] = 'XMLHttpRequest'\n          const res = await axios.put('/d/foo',req)\n          console.log(res)\n          console.log(req)\n        } catch (e) {\n          alert('登録に失敗しました。')\n          console.log(e)\n        }\n      }\n\n    \n  return (\n      <div>\n          <FormContext.Provider value={[state]}>\n              <ChangeTextContext.Provider value={[setState, putdata]}>     \n                      <FormComponent />\n              </ChangeTextContext.Provider>\n          </FormContext.Provider>\n      </div>\n  )\n}\nApp.defaultProps = {\n    name: '',\n    email: '',\n    memo: '',\n    gender: '',\n    birthday: '',\n    job: '',\n    address: '',\n    height: '',\n    selectBox: '',\n    check: ['']\n}\n\n*/\n\nReactDOM.render(<App />, document.getElementById('container'))"],"sourceRoot":""}
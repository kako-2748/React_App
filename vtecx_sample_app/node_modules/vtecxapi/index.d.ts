// Type definitions for vtecxapi
// Project: https://github.com/reflexworks/vtecxapi
// Definitions by: S.Takezaki <stakezaki@gmail.com>
// TypeScript Version: 2.8

export = vtecxapi;
export as namespace vtecxapi;

declare namespace vtecxapi {

    function log(message: string, title?: string, subtitle?: string): void;
    function sendError(status_code: number, message?: string): void;
    function sendMessage(status_code: number, message: string): void;
    function toPdf(data: any, html: string, outfilename: string, baseurl?: string): void;
    function toXls(data: any, inputxls: string, outfilename: string): void;
    function doResponseHtml(html: string): void;
    function setStatus(status_code: number): void;
    function getStatus(): number;
    function sendRedirect(location: string): void;
    function setHeader(name: string, value: string): void;
    function getQueryString(param?: string): string;
    function getUriAndQueryString(): string;
    function getPathinfo(): string;
    function getContentType(): string;
    function getFeed(url: string, force?: boolean,targetServiceName?: string, targetServiceKey?:string): VtecxApp.Entry[];
    function getEntry(url: string,targetServiceName?: string, targetServiceKey?:string): VtecxApp.Entry | null;
    function post(request: any, url: string, force?: boolean,targetServiceName?: string, targetServiceKey?:string): any;
    function put(request: any, isbulk?: boolean, parallel?: boolean, async?: boolean,targetServiceName?: string, targetServiceKey?:string): any;
    function deleteEntry(url: string, revision?: number,targetServiceName?: string, targetServiceKey?:string): void;
    function deleteFolder(url: string): any;
    function setids(url: string, num: number,targetServiceName?: string, targetServiceKey?:string): void;
    function addids(url: string, num: number,targetServiceName?: string, targetServiceKey?:string): any;
    function allocids(url: string, num: number,targetServiceName?: string, targetServiceKey?:string): any;
    function rangeids(url: string, range: string): void;
    function count(url: string,targetServiceName?: string, targetServiceKey?:string): number;
    function getRequest(): VtecxApp.Entry[];
    function getCookies(): any;
    function getHeaders(): any;
    function saveFiles(props: any): void;
    function uid(): number;
    function httpmethod(): string;
    function RXID(): string;
    function getSettingValue(key: string): string;
    function doResponse(feed: any, status_code?: number): void;
    function getHtml(url: string): string;
    function getContent(url: string): string;
    function getMail(settings: any): any;
    function getCsv(header: string[], items: string[], parent: string, skip: number, encoding: string): any[];
    function doResponseCsv(value: string[], filename: string): void;
    function adduserByAdmin(feed: any): any;
    function setSessionFeed(name: string, feed: any): void;
    function setSessionEntry(name: string, entry: any): void;
    function setSessionString(name: string, str: string): void;
    function setSessionLong(name: string, num: number): void;
    function getSessionFeed(name: string): any;
    function getSessionEntry(name: string): any;
    function getSessionLong(name: string): number;
    function deleteSessionFeed(name: string): void;
    function deleteSessionEntry(name: string): void;
    function deleteSessionLong(name: string): void;
    function incrementSession(name: string, num: number): void;
    function sendMail(entry: any, to: string[] | null, cc?: string[], bcc?: string[], attachments?: string[]): void;
    function pagenation(url: string, num: number,targetServiceName?: string, targetServiceKey?:string): void;
    function getPage(url: string, num: number,targetServiceName?: string, targetServiceKey?:string): any;
    function postBQ(request: any, async: boolean): void;
    function deleteBQ(keys: string[], async: boolean): void;
    function getBQ(sql: string): any;
    function urlfetch(url: string, method: string, reqData?: string, headers?:any): any;

}

